{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johnm\\\\Desktop\\\\code\\\\leadManagement\\\\frontend\\\\gui\\\\src\\\\components\\\\emailStage\\\\WithoutEmails.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Full Name',\n  width: 100,\n  dataIndex: 'name',\n  key: 'name',\n  fixed: 'left'\n}, {\n  title: 'Company',\n  width: 100,\n  dataIndex: 'company',\n  key: 'company',\n  fixed: 'left'\n}, {\n  title: 'Category',\n  dataIndex: 'category',\n  key: 'category',\n  width: 100\n}, {\n  title: 'Email',\n  dataIndex: 'email',\n  key: 'email',\n  width: 150\n}, {\n  title: 'Twitter',\n  dataIndex: 'twitter',\n  key: 'twitter',\n  width: 150\n}, {\n  title: 'LinkedIn',\n  dataIndex: 'linkedin',\n  key: 'linkedin',\n  width: 150\n}, {\n  title: 'Angel.co',\n  dataIndex: 'angel',\n  key: 'angel',\n  width: 150\n}, {\n  title: 'Crunchbase',\n  dataIndex: 'crunchbase',\n  key: 'crunchbase',\n  width: 150\n}, {\n  title: 'Date Created',\n  dataIndex: 'date_created',\n  key: 'date_created'\n}, {\n  title: 'Edit',\n  key: 'operationEdit',\n  fixed: 'right',\n  width: 75,\n  render: () => /*#__PURE__*/_jsxDEV(\"button\", {\n    children: \"Edit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 19\n  }, this)\n}, {\n  title: 'Delete',\n  key: 'operationDelete',\n  fixed: 'right',\n  width: 100,\n  render: () => /*#__PURE__*/_jsxDEV(\"button\", {\n    children: \"Delete\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 19\n  }, this)\n}];\nconst data = [];\n\nfor (let i = 0; i < 100; i++) {\n  data.push({\n    key: i,\n    name: `Edward Coliglio ${i}`,\n    company: 'Robert Half',\n    category: 'Angel',\n    email: `angelInvestor@angelInvestor.com`\n  });\n}\n\nconst WithoutEmails = () => {\n  _s();\n\n  const [searchText, setSearchText] = useState('');\n  const [searchedColumn, setSearchedColumn] = useState();\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = clearFilters => {\n    clearFilters();\n    setSearchText('');\n  };\n\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: node => {\n          const searchInput = node;\n        },\n        placeholder: `Search ${dataIndex}`,\n        value: selectedKeys[0],\n        onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n        onPressEnter: () => handleSearch(selectedKeys, confirm, dataIndex),\n        style: {\n          marginBottom: 8,\n          display: 'block'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n          icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 19\n          }, this),\n          size: \"small\",\n          style: {\n            width: 90\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.handleReset(clearFilters),\n          size: \"small\",\n          style: {\n            width: 90\n          },\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"link\",\n          size: \"small\",\n          onClick: () => {\n            confirm({\n              closeDropdown: false\n            });\n            this.setState({\n              searchText: selectedKeys[0],\n              searchedColumn: dataIndex\n            });\n          },\n          children: \"Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this),\n    filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n      style: {\n        color: filtered ? '#1890ff' : undefined\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }, this),\n    onFilter: (value, record) => record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: text => this.state.searchedColumn === dataIndex ? /*#__PURE__*/_jsxDEV(Highlighter, {\n      highlightStyle: {\n        backgroundColor: '#ffc069',\n        padding: 0\n      },\n      searchWords: [this.state.searchText],\n      autoEscape: true,\n      textToHighlight: text ? text.toString() : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this) : text\n  });\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    dataSource: data,\n    scroll: {\n      x: 1500\n    } // summary={pageData => (\n    //   <Table.Summary fixed>\n    //     <Table.Summary.Row>\n    //       <Table.Summary.Cell index={0} colSpan={2}>\n    //         Fix Left\n    //       </Table.Summary.Cell>\n    //       <Table.Summary.Cell index={2} colSpan={8}>\n    //         Scroll Context\n    //       </Table.Summary.Cell>\n    //       <Table.Summary.Cell index={10}>Fix Right</Table.Summary.Cell>\n    //     </Table.Summary.Row>\n    //   </Table.Summary>\n    // )}\n    ,\n    sticky: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WithoutEmails, \"n+pe6qY8Fh2U4kFlj17YA6oeqvA=\");\n\n_c = WithoutEmails;\nexport default WithoutEmails; // takes in the data stored in state, filters the data by email validation uses filteredTable state, export filteredTablestate to csv to google sheets,\n\nvar _c;\n\n$RefreshReg$(_c, \"WithoutEmails\");","map":{"version":3,"sources":["C:/Users/johnm/Desktop/code/leadManagement/frontend/gui/src/components/emailStage/WithoutEmails.js"],"names":["useState","Table","Input","Button","Space","Highlighter","SearchOutlined","columns","title","width","dataIndex","key","fixed","render","data","i","push","name","company","category","email","WithoutEmails","searchText","setSearchText","searchedColumn","setSearchedColumn","handleSearch","selectedKeys","confirm","handleReset","clearFilters","getColumnSearchProps","filterDropdown","setSelectedKeys","padding","node","searchInput","e","target","value","marginBottom","display","closeDropdown","setState","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","text","state","backgroundColor","x"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,EAA+BC,KAA/B,QAA6C,MAA7C;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,KAAK,EAAE,GAFT;AAGEC,EAAAA,SAAS,EAAE,MAHb;AAIEC,EAAAA,GAAG,EAAE,MAJP;AAKEC,EAAAA,KAAK,EAAE;AALT,CADc,EAQd;AACEJ,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,KAAK,EAAE,GAFT;AAGEC,EAAAA,SAAS,EAAE,SAHb;AAIEC,EAAAA,GAAG,EAAE,SAJP;AAKEC,EAAAA,KAAK,EAAE;AALT,CARc,EAed;AACEJ,EAAAA,KAAK,EAAE,UADT;AAEEE,EAAAA,SAAS,EAAE,UAFb;AAGEC,EAAAA,GAAG,EAAE,UAHP;AAIEF,EAAAA,KAAK,EAAE;AAJT,CAfc,EAqBd;AACED,EAAAA,KAAK,EAAE,OADT;AAEEE,EAAAA,SAAS,EAAE,OAFb;AAGEC,EAAAA,GAAG,EAAE,OAHP;AAIEF,EAAAA,KAAK,EAAE;AAJT,CArBc,EA2Bd;AACED,EAAAA,KAAK,EAAE,SADT;AAEEE,EAAAA,SAAS,EAAE,SAFb;AAGEC,EAAAA,GAAG,EAAE,SAHP;AAIEF,EAAAA,KAAK,EAAE;AAJT,CA3Bc,EAiCd;AACED,EAAAA,KAAK,EAAE,UADT;AAEEE,EAAAA,SAAS,EAAE,UAFb;AAGEC,EAAAA,GAAG,EAAE,UAHP;AAIEF,EAAAA,KAAK,EAAE;AAJT,CAjCc,EAuCd;AACED,EAAAA,KAAK,EAAE,UADT;AAEEE,EAAAA,SAAS,EAAE,OAFb;AAGEC,EAAAA,GAAG,EAAE,OAHP;AAIEF,EAAAA,KAAK,EAAE;AAJT,CAvCc,EA6Cd;AACED,EAAAA,KAAK,EAAE,YADT;AAEEE,EAAAA,SAAS,EAAE,YAFb;AAGEC,EAAAA,GAAG,EAAE,YAHP;AAIEF,EAAAA,KAAK,EAAE;AAJT,CA7Cc,EAmDd;AACED,EAAAA,KAAK,EAAE,cADT;AAEEE,EAAAA,SAAS,EAAE,cAFb;AAGEC,EAAAA,GAAG,EAAE;AAHP,CAnDc,EAwDd;AACEH,EAAAA,KAAK,EAAE,MADT;AAEEG,EAAAA,GAAG,EAAE,eAFP;AAGEC,EAAAA,KAAK,EAAE,OAHT;AAIEH,EAAAA,KAAK,EAAE,EAJT;AAKEI,EAAAA,MAAM,EAAE,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALhB,CAxDc,EA+Dd;AACEL,EAAAA,KAAK,EAAE,QADT;AAEEG,EAAAA,GAAG,EAAE,iBAFP;AAGEC,EAAAA,KAAK,EAAE,OAHT;AAIEH,EAAAA,KAAK,EAAE,GAJT;AAKEI,EAAAA,MAAM,EAAE,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALhB,CA/Dc,CAAhB;AAwEA,MAAMC,IAAI,GAAG,EAAb;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5BD,EAAAA,IAAI,CAACE,IAAL,CAAU;AACRL,IAAAA,GAAG,EAAEI,CADG;AAERE,IAAAA,IAAI,EAAG,mBAAkBF,CAAE,EAFnB;AAGRG,IAAAA,OAAO,EAAE,aAHD;AAIRC,IAAAA,QAAQ,EAAE,OAJF;AAKRC,IAAAA,KAAK,EAAG;AALA,GAAV;AAQD;;AAGD,MAAMC,aAAa,GAAC,MAAI;AAAA;;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACwB,cAAD,EAAiBC,iBAAjB,IAAsCzB,QAAQ,EAApD;;AAEA,QAAM0B,YAAY,GAAG,CAACC,YAAD,EAAeC,OAAf,EAAwBlB,SAAxB,KAAsC;AACzDkB,IAAAA,OAAO;AACPL,IAAAA,aAAa,CAACI,YAAY,CAAC,CAAD,CAAb,CAAb;AACAF,IAAAA,iBAAiB,CAACf,SAAD,CAAjB;AACD,GAJD;;AAMA,QAAMmB,WAAW,GAAGC,YAAY,IAAI;AAClCA,IAAAA,YAAY;AACZP,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAHD;;AAKA,QAAMQ,oBAAoB,GAAGrB,SAAS,KAAK;AACzCsB,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,eAAF;AAAmBN,MAAAA,YAAnB;AAAiCC,MAAAA,OAAjC;AAA0CE,MAAAA;AAA1C,KAAD,kBACd;AAAK,MAAA,KAAK,EAAE;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,GAAG,EAAEC,IAAI,IAAI;AACX,gBAAMC,WAAW,GAAGD,IAApB;AACD,SAHH;AAIE,QAAA,WAAW,EAAG,UAASzB,SAAU,EAJnC;AAKE,QAAA,KAAK,EAAEiB,YAAY,CAAC,CAAD,CALrB;AAME,QAAA,QAAQ,EAAEU,CAAC,IAAIJ,eAAe,CAACI,CAAC,CAACC,MAAF,CAASC,KAAT,GAAiB,CAACF,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB,GAAoC,EAArC,CANhC;AAOE,QAAA,YAAY,EAAE,MAAMb,YAAY,CAACC,YAAD,EAAeC,OAAf,EAAwBlB,SAAxB,CAPlC;AAQE,QAAA,KAAK,EAAE;AAAE8B,UAAAA,YAAY,EAAE,CAAhB;AAAmBC,UAAAA,OAAO,EAAE;AAA5B;AART;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,KAAD;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,OAAO,EAAE,MAAM,KAAKf,YAAL,CAAkBC,YAAlB,EAAgCC,OAAhC,EAAyClB,SAAzC,CAFjB;AAGE,UAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBAHR;AAIE,UAAA,IAAI,EAAC,OAJP;AAKE,UAAA,KAAK,EAAE;AAAED,YAAAA,KAAK,EAAE;AAAT,WALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKoB,WAAL,CAAiBC,YAAjB,CAAvB;AAAuD,UAAA,IAAI,EAAC,OAA5D;AAAoE,UAAA,KAAK,EAAE;AAAErB,YAAAA,KAAK,EAAE;AAAT,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAaE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,OAAO,EAAE,MAAM;AACbmB,YAAAA,OAAO,CAAC;AAAEc,cAAAA,aAAa,EAAE;AAAjB,aAAD,CAAP;AACA,iBAAKC,QAAL,CAAc;AACZrB,cAAAA,UAAU,EAAEK,YAAY,CAAC,CAAD,CADZ;AAEZH,cAAAA,cAAc,EAAEd;AAFJ,aAAd;AAID,WATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFuC;AA0CzCkC,IAAAA,UAAU,EAAEC,QAAQ,iBAAI,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAED,QAAQ,GAAG,SAAH,GAAeE;AAAhC;AAAvB;AAAA;AAAA;AAAA;AAAA,YA1CiB;AA2CzCC,IAAAA,QAAQ,EAAE,CAACT,KAAD,EAAQU,MAAR,KACRA,MAAM,CAACvC,SAAD,CAAN,GACIuC,MAAM,CAACvC,SAAD,CAAN,CAAkBwC,QAAlB,GAA6BC,WAA7B,GAA2CC,QAA3C,CAAoDb,KAAK,CAACY,WAAN,EAApD,CADJ,GAEI,EA9CmC;AA+CzCE,IAAAA,6BAA6B,EAAEC,OAAO,IAAI;AACxC,UAAIA,OAAJ,EAAa;AACXC,QAAAA,UAAU,CAAC,MAAM,KAAKnB,WAAL,CAAiBoB,MAAjB,EAAP,EAAkC,GAAlC,CAAV;AACD;AACF,KAnDwC;AAoDzC3C,IAAAA,MAAM,EAAE4C,IAAI,IACV,KAAKC,KAAL,CAAWlC,cAAX,KAA8Bd,SAA9B,gBACE,QAAC,WAAD;AACE,MAAA,cAAc,EAAE;AAAEiD,QAAAA,eAAe,EAAE,SAAnB;AAA8BzB,QAAAA,OAAO,EAAE;AAAvC,OADlB;AAEE,MAAA,WAAW,EAAE,CAAC,KAAKwB,KAAL,CAAWpC,UAAZ,CAFf;AAGE,MAAA,UAAU,MAHZ;AAIE,MAAA,eAAe,EAAEmC,IAAI,GAAGA,IAAI,CAACP,QAAL,EAAH,GAAqB;AAJ5C;AAAA;AAAA;AAAA;AAAA,YADF,GAQEO;AA7DqC,GAAL,CAAtC;;AAiEA,sBACE,QAAC,KAAD;AACA,IAAA,OAAO,EAAElD,OADT;AAEA,IAAA,UAAU,EAAEO,IAFZ;AAGA,IAAA,MAAM,EAAE;AAAE8C,MAAAA,CAAC,EAAE;AAAL,KAHR,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAiBA,IAAA,MAAM;AAjBN;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CArGD;;GAAMvC,a;;KAAAA,a;AAuGN,eAAeA,aAAf,C,CAGA","sourcesContent":["import { useState } from 'react'\r\nimport { Table, Input, Button, Space  } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Full Name',\r\n    width: 100,\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    fixed: 'left',\r\n  },\r\n  {\r\n    title: 'Company',\r\n    width: 100,\r\n    dataIndex: 'company',\r\n    key: 'company',\r\n    fixed: 'left',\r\n  },\r\n  {\r\n    title: 'Category',\r\n    dataIndex: 'category',\r\n    key: 'category',\r\n    width: 100,\r\n  },\r\n  {\r\n    title: 'Email',\r\n    dataIndex: 'email',\r\n    key: 'email',\r\n    width: 150,\r\n  },\r\n  {\r\n    title: 'Twitter',\r\n    dataIndex: 'twitter',\r\n    key: 'twitter',\r\n    width: 150,\r\n  },\r\n  {\r\n    title: 'LinkedIn',\r\n    dataIndex: 'linkedin',\r\n    key: 'linkedin',\r\n    width: 150,\r\n  },\r\n  {\r\n    title: 'Angel.co',\r\n    dataIndex: 'angel',\r\n    key: 'angel',\r\n    width: 150,\r\n  },\r\n  {\r\n    title: 'Crunchbase',\r\n    dataIndex: 'crunchbase',\r\n    key: 'crunchbase',\r\n    width: 150,\r\n  },\r\n  { \r\n    title: 'Date Created',\r\n    dataIndex: 'date_created',\r\n    key: 'date_created' \r\n  },\r\n  {\r\n    title: 'Edit',\r\n    key: 'operationEdit',\r\n    fixed: 'right',\r\n    width: 75,\r\n    render: () => <button>Edit</button>,\r\n  },\r\n  {\r\n    title: 'Delete',\r\n    key: 'operationDelete',\r\n    fixed: 'right',\r\n    width: 100,\r\n    render: () => <button>Delete</button>,\r\n  }\r\n];\r\n\r\nconst data = [];\r\nfor (let i = 0; i < 100; i++) {\r\n  data.push({\r\n    key: i,\r\n    name: `Edward Coliglio ${i}`,\r\n    company: 'Robert Half',\r\n    category: 'Angel',\r\n    email: `angelInvestor@angelInvestor.com`,\r\n    \r\n  });\r\n}\r\n\r\n\r\nconst WithoutEmails=()=>{\r\n  const [searchText, setSearchText] = useState('')\r\n  const [searchedColumn, setSearchedColumn] = useState()\r\n  \r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchText(selectedKeys[0])\r\n    setSearchedColumn(dataIndex)\r\n  };\r\n\r\n  const handleReset = clearFilters => {\r\n    clearFilters();\r\n    setSearchText('')\r\n  };\r\n\r\n  const getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            const searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  return(\r\n    <Table\r\n    columns={columns}\r\n    dataSource={data}\r\n    scroll={{ x: 1500 }}\r\n    // summary={pageData => (\r\n    //   <Table.Summary fixed>\r\n    //     <Table.Summary.Row>\r\n    //       <Table.Summary.Cell index={0} colSpan={2}>\r\n    //         Fix Left\r\n    //       </Table.Summary.Cell>\r\n    //       <Table.Summary.Cell index={2} colSpan={8}>\r\n    //         Scroll Context\r\n    //       </Table.Summary.Cell>\r\n    //       <Table.Summary.Cell index={10}>Fix Right</Table.Summary.Cell>\r\n    //     </Table.Summary.Row>\r\n    //   </Table.Summary>\r\n    // )}\r\n    sticky\r\n  />\r\n  )\r\n}\r\n\r\nexport default WithoutEmails\r\n\r\n\r\n// takes in the data stored in state, filters the data by email validation uses filteredTable state, export filteredTablestate to csv to google sheets,\r\n"]},"metadata":{},"sourceType":"module"}