{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johnm\\\\Desktop\\\\code\\\\leadManagement\\\\frontend\\\\gui\\\\src\\\\components\\\\emailStage\\\\WithoutEmails.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [];\n\nfor (let i = 0; i < 100; i++) {\n  data.push({\n    key: i,\n    name: `Edward Coliglio ${i}`,\n    company: 'Robert Half',\n    category: 'Angel',\n    email: `angelInvestor@angelInvestor.com`\n  });\n}\n\ndata.push({\n  key: 4,\n  name: `Steven Zimba`,\n  company: 'George and Associates',\n  category: 'VC',\n  email: `vcCompany@vcCompany.com`\n});\n\nconst WithoutEmails = () => {\n  _s();\n\n  // handles search functions of table \n  const [searchText, setSearchText] = useState('');\n  const [searchedColumn, setSearchedColumn] = useState();\n  const searchInput = useRef(); // handling fetched data \n\n  const [dataWithout, setDataWithout] = useState(data);\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = clearFilters => {\n    clearFilters();\n    setSearchText('');\n  };\n\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: searchInput,\n        placeholder: `Search ${dataIndex}`,\n        value: selectedKeys[0],\n        onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n        onPressEnter: () => handleSearch(selectedKeys, confirm, dataIndex),\n        style: {\n          marginBottom: 8,\n          display: 'block'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: () => handleSearch(selectedKeys, confirm, dataIndex),\n          icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this),\n          size: \"small\",\n          style: {\n            width: 90\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleReset(clearFilters),\n          size: \"small\",\n          style: {\n            width: 90\n          },\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"link\",\n          size: \"small\",\n          onClick: () => {\n            confirm({\n              closeDropdown: false\n            });\n            setSearchText(selectedKeys[0]);\n            setSearchedColumn(dataIndex);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this),\n    filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n      style: {\n        color: filtered ? '#1890ff' : undefined\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }, this),\n    onFilter: (value, record) => record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => searchInput.current.select(), 100);\n      }\n    },\n    render: text => searchedColumn === dataIndex ? /*#__PURE__*/_jsxDEV(Highlighter, {\n      highlightStyle: {\n        backgroundColor: '#ffc069',\n        padding: 0\n      },\n      searchWords: [searchText],\n      autoEscape: true,\n      textToHighlight: text ? text.toString() : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this) : text\n  });\n\n  const columns = [{\n    title: 'Full Name',\n    width: 100,\n    dataIndex: 'name',\n    key: 'name',\n    fixed: 'left',\n    ...getColumnSearchProps('name')\n  }, {\n    title: 'Company',\n    width: 100,\n    dataIndex: 'company',\n    key: 'company',\n    fixed: 'left',\n    ...getColumnSearchProps('company')\n  }, {\n    title: 'Category',\n    dataIndex: 'category',\n    key: 'category',\n    width: 100,\n    ...getColumnSearchProps('category')\n  }, {\n    title: 'Email',\n    dataIndex: 'email',\n    key: 'email',\n    width: 150,\n    ...getColumnSearchProps('email')\n  }, {\n    title: 'Twitter',\n    dataIndex: 'twitter',\n    key: 'twitter',\n    width: 150,\n    ...getColumnSearchProps('twitter')\n  }, {\n    title: 'LinkedIn',\n    dataIndex: 'linkedin',\n    key: 'linkedin',\n    width: 150,\n    ...getColumnSearchProps('linkedin')\n  }, {\n    title: 'Angel.co',\n    dataIndex: 'angel',\n    key: 'angel',\n    width: 150,\n    ...getColumnSearchProps('angel')\n  }, {\n    title: 'Crunchbase',\n    dataIndex: 'crunchbase',\n    key: 'crunchbase',\n    width: 150,\n    ...getColumnSearchProps('crunchbase')\n  }, {\n    title: 'Date Created',\n    dataIndex: 'date_created',\n    key: 'date_created',\n    ...getColumnSearchProps('date_created')\n  }, {\n    title: 'Edit',\n    key: 'operationEdit',\n    fixed: 'right',\n    width: 75,\n    render: () => /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }, this)\n  }, {\n    title: 'Delete',\n    key: 'operationDelete',\n    fixed: 'right',\n    width: 100,\n    render: () => /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }, this)\n  }, {\n    title: 'Validate',\n    key: 'operationValidate',\n    fixed: 'right',\n    width: 100,\n    render: () => /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Validate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }, this)\n  }];\n\n  const fetchList = async () => {\n    await axios.get('http://localhost:8000/api/withoutEmail').then(res => setDataWithout(res.data));\n  };\n\n  useEffect(() => {\n    fetchList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Targets With No Emails\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: dataWithout,\n      scroll: {\n        x: 1500\n      } //  Can add a summary to the bottom of the table \n      ,\n      sticky: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WithoutEmails, \"URb+shgeXIF7/eLRZ05LAExETVI=\");\n\n_c = WithoutEmails;\nexport default WithoutEmails; // takes in the data stored in state, filters the data by email validation uses filteredTable state, export filteredTablestate to csv to google sheets,\n\nvar _c;\n\n$RefreshReg$(_c, \"WithoutEmails\");","map":{"version":3,"sources":["C:/Users/johnm/Desktop/code/leadManagement/frontend/gui/src/components/emailStage/WithoutEmails.js"],"names":["useState","useRef","useEffect","axios","Table","Input","Button","Space","Highlighter","SearchOutlined","data","i","push","key","name","company","category","email","WithoutEmails","searchText","setSearchText","searchedColumn","setSearchedColumn","searchInput","dataWithout","setDataWithout","handleSearch","selectedKeys","confirm","dataIndex","handleReset","clearFilters","getColumnSearchProps","filterDropdown","setSelectedKeys","padding","e","target","value","marginBottom","display","width","closeDropdown","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","current","select","render","text","backgroundColor","columns","title","fixed","fetchList","get","then","res","textAlign","x"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Table, Input, Button, Space  } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\nconst data = [];\r\nfor (let i = 0; i < 100; i++) {\r\n  data.push({\r\n    key: i,\r\n    name: `Edward Coliglio ${i}`,\r\n    company: 'Robert Half',\r\n    category: 'Angel',\r\n    email: `angelInvestor@angelInvestor.com`,\r\n    \r\n  });\r\n}\r\n\r\ndata.push({\r\n  key: 4,\r\n  name: `Steven Zimba`,\r\n  company: 'George and Associates',\r\n  category: 'VC',\r\n  email: `vcCompany@vcCompany.com`,\r\n})\r\n\r\nconst WithoutEmails=()=>{\r\n  // handles search functions of table \r\n  const [searchText, setSearchText] = useState('')\r\n  const [searchedColumn, setSearchedColumn] = useState()\r\n  const searchInput= useRef()\r\n\r\n  // handling fetched data \r\n  const [dataWithout, setDataWithout] = useState(data)\r\n\r\n  \r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchText(selectedKeys[0])\r\n    setSearchedColumn(dataIndex)\r\n  };\r\n\r\n  const handleReset = clearFilters => {\r\n    clearFilters();\r\n    setSearchText('')\r\n  };\r\n\r\n  const getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={searchInput}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              setSearchText(selectedKeys[0])\r\n              setSearchedColumn(dataIndex)\r\n            }}\r\n          >\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.current.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Full Name',\r\n      width: 100,\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      fixed: 'left',\r\n      ...getColumnSearchProps('name')\r\n    },\r\n    {\r\n      title: 'Company',\r\n      width: 100,\r\n      dataIndex: 'company',\r\n      key: 'company',\r\n      fixed: 'left',\r\n      ...getColumnSearchProps('company')\r\n    },\r\n    {\r\n      title: 'Category',\r\n      dataIndex: 'category',\r\n      key: 'category',\r\n      width: 100,\r\n      ...getColumnSearchProps('category')\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n      width: 150,\r\n      ...getColumnSearchProps('email')\r\n    },\r\n    {\r\n      title: 'Twitter',\r\n      dataIndex: 'twitter',\r\n      key: 'twitter',\r\n      width: 150,\r\n      ...getColumnSearchProps('twitter')\r\n    },\r\n    {\r\n      title: 'LinkedIn',\r\n      dataIndex: 'linkedin',\r\n      key: 'linkedin',\r\n      width: 150,\r\n      ...getColumnSearchProps('linkedin')\r\n    },\r\n    {\r\n      title: 'Angel.co',\r\n      dataIndex: 'angel',\r\n      key: 'angel',\r\n      width: 150,\r\n      ...getColumnSearchProps('angel')\r\n    },\r\n    {\r\n      title: 'Crunchbase',\r\n      dataIndex: 'crunchbase',\r\n      key: 'crunchbase',\r\n      width: 150,\r\n      ...getColumnSearchProps('crunchbase')\r\n    },\r\n    { \r\n      title: 'Date Created',\r\n      dataIndex: 'date_created',\r\n      key: 'date_created',\r\n      ...getColumnSearchProps('date_created') \r\n    },\r\n    {\r\n      title: 'Edit',\r\n      key: 'operationEdit',\r\n      fixed: 'right',\r\n      width: 75,\r\n      render: () => <button>Edit</button>,\r\n    },\r\n    {\r\n      title: 'Delete',\r\n      key: 'operationDelete',\r\n      fixed: 'right',\r\n      width: 100,\r\n      render: () => <button>Delete</button>,\r\n    },\r\n    {\r\n      title: 'Validate',\r\n      key: 'operationValidate',\r\n      fixed: 'right',\r\n      width: 100,\r\n      render: () => <button>Validate</button>,\r\n    }\r\n  ];\r\n  \r\n  const fetchList = async ()=>{\r\n    await axios.get('http://localhost:8000/api/withoutEmail')\r\n    .then(res => setDataWithout(res.data))\r\n  }\r\n  useEffect(()=>{\r\n    fetchList()\r\n  }, [])\r\n\r\n  return(\r\n    <div>\r\n      <h1 style={{textAlign:'center'}}>Targets With No Emails</h1>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={dataWithout}\r\n        scroll={{ x: 1500 }}\r\n      //  Can add a summary to the bottom of the table \r\n        sticky\r\n      />\r\n    </div>\r\n   \r\n  )\r\n}\r\n\r\nexport default WithoutEmails\r\n\r\n\r\n// takes in the data stored in state, filters the data by email validation uses filteredTable state, export filteredTablestate to csv to google sheets,\r\n"]},"metadata":{},"sourceType":"module"}